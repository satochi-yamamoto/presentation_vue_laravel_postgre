version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/traefik.yml:/etc/traefik/traefik.yml:ro"
      - "./traefik/dynamic:/etc/traefik/dynamic:ro"
      - "letsencrypt:/letsencrypt"
    networks:
      - traefik_network

  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: laravel_app
    restart: unless-stopped
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=alex_portfolio
      - DB_USERNAME=laravel
      - DB_PASSWORD=secret
      - APP_URL=http://localhost
    volumes:
      - ./backend:/var/www
    networks:
      - backend_network
      - traefik_network
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`api.laravel.satochi.com.br`)"
      - "traefik.http.routers.app.entrypoints=websecure"
      - "traefik.http.routers.app.tls.certresolver=letsencrypt"
      - "traefik.http.services.app.loadbalancer.server.port=9000"

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: alex_portfolio
      POSTGRES_USER: laravel
      POSTGRES_PASSWORD: secret
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U laravel -d alex_portfolio"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: vue_app
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - traefik_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`laravel.satochi.com.br`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=letsencrypt"
      - "traefik.http.services.frontend.loadbalancer.server.port=8080"

networks:
  traefik_network:
    driver: bridge
  backend_network:
    driver: bridge
    internal: true

volumes:
  postgres_data:
    driver: local
  letsencrypt:
    driver: local